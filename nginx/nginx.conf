
user www-data;
pid /run/nginx.pid;
worker_processes auto;
worker_rlimit_nofile 65535;

events {
	multi_accept on;
	worker_connections 65535;
}

http {
	charset utf-8;
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	log_not_found off;
	types_hash_max_size 2048;
	client_max_body_size 16M;

	# Static HTML
	root /usr/share/nginx/html;
	
	# MIME
	include mime.types;
	default_type application/octet-stream;

	# logging
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log warn;

	# limits
	limit_req_log_level warn;
	limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;

	# SSL
	ssl_session_timeout 1d;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off;

	# Mozilla Modern configuration
	ssl_protocols TLSv1.3;

	# OCSP Stapling
	ssl_stapling on;
	ssl_stapling_verify on;
	resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
	resolver_timeout 2s;

	# load configs
	include /etc/nginx/conf.d/*.conf;

	server {
		server_name nginx.htddev.org;
		listen 443 ssl http2;
		listen [::]:443 ssl http2;	

		# SSL
		ssl_certificate /etc/letsencrypt/live/htddev.org/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/htddev.org/privkey.pem;
		ssl_trusted_certificate /etc/letsencrypt/live/htddev.org/chain.pem;
  		
		# security
		include  /etc/nginx/nginxconfig.io/security.conf;
		
		# index.html fallback
		location / {
			try_files $uri $uri/ /index.html;
			#try_files /index.html =404;
		}

		## reverse proxy
		location /whoami {
			proxy_pass http://whoami:80;
			include nginxconfig.io/proxy.conf;
		}

		# additional config
		include  /etc/nginx/nginxconfig.io/general.conf;
	}

	# HTTP -> HTTPS Upgrade
	server {
		listen 80;
		listen [::]:80;

		server_name nginx.htddev.org;
		include nginxconfig.io/letsencrypt.conf;

		location / {
			return 301 https://nginx.htddev.org$request_uri;
		}

	}
}
